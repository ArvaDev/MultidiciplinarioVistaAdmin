import React from 'react'
import ReactDOM from 'react-dom/client'
import './main.css'
import { RouterProvider, createBrowserRouter } from 'react-router-dom'
import Login from './pages/Login/Login'
import Register from './pages/Register/Register'
import Home from './pages/Home/Home'
import Socios from './pages/Socios/Socios'
import Notificaciones from "./pages/Notificationes/Notificaciones"
import RegisterSocios from './pages/RegisterSocio/RegisterSocio'
import NoFound from './pages/NoFound/NoFound'

const router = createBrowserRouter([
  {
    path: "/",
    element: <Login/>
  },
  {
    path: "/Register",
    element: <Register/>
  },
  {
    path: "/Home",
    element: <Home/>
  },
  {
    path: "/Home/Socios",
    element: <Socios/>
  },
  {
    path: "/Home/Notificaciones",
    element: <Notificaciones/>
  },
  {
    path: "/Home/register-socios",
    element: <RegisterSocios/>
  },
  {
    path: "*",
    element: <NoFound/>
  }
])

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <RouterProvider router={router}/>
  </React.StrictMode>,
)


const userData = JSON.parse(window.localStorage.getItem('user'));
console.log(userData);


import './Login.css';
import TextField from "../../components/UI/textfield/textfield";
import BlackBtn from "../../components/UI/blackBtn/BlackBtn";
import AlertError from "../../components/UI/Error/AlertError";
import { Signin } from "../../Service/Login";
import { useField } from "../../Hooks/useField";
import { useState } from 'react';
import { FormDataValidation } from '../../utils/api';

export default function Login() {

    const username = useField({ type: "Nombre" });
    const password = useField({ type: "Contrase침a" });
    const email = useField({ type: "Correo" });
    const [dataUser, setDataUser] = useState(null);
    const [messageError, setMessageError] = useState("");

    const handlerClick = async (event) => {
        try {
            event.preventDefault();
            const value = FormDataValidation([username.value, password.value, email.value]);
                
            if (!value) {
                const { token, dateUser } = await Signin({ username, password, email });
                
                // Guardar el token en el localStorage
                localStorage.setItem('token', token);
                // Guardar otros datos del usuario si es necesario
                localStorage.setItem('user', JSON.stringify(dateUser));
                
                setDataUser(dateUser);
            
            } else {
                setMessageError(value);
            }
        } catch (error) {
            console.log(error);
        }
    }

    return (
        <div className="LoginClass">
            <form onSubmit={handlerClick} className="Form">
                <div className="container-fields">
                    <span className="sesion-title">Inicio de sesi칩n <img src="../../../public/logo.png" height={"30px"} />  </span>
                    <TextField message="Usuario: " customClass="LoginInput" onblur={username.onblur} />
                    {username.messageError && <AlertError message={username.messageError} />}
                    <TextField message="Email: " customClass="LoginInput" onblur={email.onblur} />
                    {email.messageError && <AlertError message={email.messageError} />}
                    <TextField message="Contrase침a: " customClass="LoginInput" type="password" onblur={password.onblur} />
                    {password.messageError && <AlertError message={password.messageError} />}
                    <BlackBtn message="Iniciar sesi칩n" width="100%" type={'submit'} />
                    {messageError && <AlertError message={messageError} />}
                </div>
            </form>
            <div className="Image"> <p>Cooperativa pimienta Jotiquetz</p> </div>
        </div>
    );
}
